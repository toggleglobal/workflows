on:
  workflow_call:
    inputs:
      python-versions:
        description: Version of python used during testing, like "['3.9', '3.10']"
        required: true
        type: string
      dependency-management:
        description: Select 'pip' or 'poetry' to install dependencies
        required: true
        type: string
      tox_test:
        description: Set to true if using `tox` for testing (requires tox.ini in root dir)
        required: true
        type: boolean
      sonar_analysis:
        description: Set to true if sonarcloud analysis is required.
        required: true
        type: boolean
      static_type_check:
        description: Set to true if static type check is required. by default, it is disabled.
        required: false
        type: boolean
        default: false


jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    strategy:
      matrix:
        python: ${{ fromJson(inputs.python-versions) }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Setup SSH and git
        run: |
          mkdir -p -m 0700 "$HOME/.ssh"
          ssh-keyscan -H github.com >> $HOME/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.PYTHON_PRIVATE_REPO_KEY }}"
          git config --global url."git@github.com:toggleglobal".insteadOf https://github.com/toggleglobal

      - name: Add Dependencies via Pip
        if: inputs.dependency-management == 'pip'
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8 pytest tox
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Add Dependencies via Poetry
        if: inputs.dependency-management == 'poetry'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry add coverage flake8 pytest tox pyright
          poetry install

      - name: Lint
        run: |
          source .venv/bin/activate
          flake8 .

      - name: Create stubs
        if: ${{ hashFiles('stubs.sh') != '' }}
        run: |
          source .venv/bin/activate
          chmod +x ./stubs.sh
          ./stubs.sh
        shell: bash

      - name: Static type check
        if: ${{ inputs.static_type_check }}
        run: |
          source .venv/bin/activate
          pyright .

      - name: Test - pytest
        if: ${{ !inputs.tox_test }}
        run: |
          source .venv/bin/activate
          coverage run -m pytest
          coverage xml

      - name: Test - tox
        if: inputs.tox_test
        run: |
          source .venv/bin/activate
          tox -e py

      - name: SonarCloud Scan
        if: inputs.sonar_analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
