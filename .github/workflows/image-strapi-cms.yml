on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      DEPLOYER_EMAIL:
        required: true
      DEPLOYER_USERNAME:
        required: true
      DEPLOYER_GITHUB_TOKEN:
        required: true

    inputs:
      push-image:
        description: Pushes built image to dockerhub when set to true.
        required: false
        type: boolean
        default: false
      skip-deploy:
        description: Prevents modifications to apps-infrastructure when set to true. Primarily for testing.
        required: false
        type: boolean
        default: false
      dockerfile:
        description: Path to the Dockerfile
        required: true
        type: string
      tags:
        description: List of tags for the image (must be all lowercase). These will override the default tags.
        required: false
        type: string
      environment:
        description: The target environment to build and deploy image
        required: true
        default: dev
        type: string
jobs:
  build-push-image:
    name: Build and Push Image
    runs-on: ubuntu-latest
    outputs:
      image-ref: ${{ steps.gen-ref.outputs.IMAGE_REF }}
      short-sha: ${{ steps.short-sha.outputs.SHORT_SHA }}
      repository-suffix: ${{ steps.repo-suffix.outputs.REPOSITORY_SUFFIX }}
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      IMAGE_TAGS: ${{ inputs.tags }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Short SHA
        if: inputs.push-image && env.IMAGE_TAGS == ''
        id: short-sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Repository Suffix
        id: repo-suffix
        # Prepend hyphen if set
        if: env.REPOSITORY_SUFFIX != ''
        run: |
          REPOSITORY_SUFFIX=-${{env.REPOSITORY_SUFFIX}}
          echo "REPOSITORY_SUFFIX=$REPOSITORY_SUFFIX" >> $GITHUB_ENV
          echo "REPOSITORY_SUFFIX=$REPOSITORY_SUFFIX" >> $GITHUB_OUTPUT

      - name: Generate Image Tags
        id: gen-ref
        # Do not overwrite tags if set already from input
        if: inputs.push-image && env.IMAGE_TAGS == ''
        # We're pushing an image and no tags supplied, so create defaults
        run: |
          echo "IMAGE_TAGS<<EOF" >> $GITHUB_ENV
          echo "${{github.repository}}${{env.REPOSITORY_SUFFIX}}:${{env.SHORT_SHA}}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "IMAGE_REF=${{github.repository}}${{env.REPOSITORY_SUFFIX}}:${{env.SHORT_SHA}}" >> $GITHUB_OUTPUT
          
      - name: Setup SSH
        run: |
          mkdir -p -m 0700 "$HOME/.ssh"
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.GO_PRIVATE_REPO_KEY }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Info
        run: |
          echo "Push Image: ${{inputs.push-image}}"
          echo "Tags: ${{env.IMAGE_TAGS}}"
          echo "Short-SHA: ${{env.SHORT_SHA}}"
          echo "Repository-suffix: ${{env.REPOSITORY_SUFFIX}}"

      - name: Build image and push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          tags: ${{ env.IMAGE_TAGS }}
          push: ${{ inputs.push-image }}
          ssh: default

      - name: Image digest
        run: echo "::notice ::Image digest ${{ steps.docker_build.outputs.digest }}"

  scan-image:
    needs: [ build-push-image ]
    if: inputs.push-image
    secrets: inherit
    uses: toggleglobal/workflows/.github/workflows/vulnerability-scanner.yml@main
    with:
      image: ${{ needs.build-push-image.outputs.image-ref }}

  update-app-chart:
    needs: [ build-push-image, scan-image ]
    if: inputs.push-image && !inputs.skip-deploy
    secrets: inherit
    uses: toggleglobal/workflows/.github/workflows/update-app-chart.yml@refactor-strapi-cms-wf
    with:
      runs-as: inputs.runs-as
      short-sha: ${{ needs.build-push-image.outputs.short-sha }}
      repository-suffix: ${{ needs.build-push-image.outputs.repository-suffix }}
      environment: inputs.environment